node(node_label) {
    env.ORIG_WKSP = env.WORKSPACE
    currentBuild.description = "distro : " + base_os
    try {
        checkout scm
        load 'ci/lib/stage-clone.jenkinsfile'

        dir("gramine") {
            env.SGX = "1"
            sh '../ci/resources/setup_workspace.sh'
            env.WORKSPACE = env.WORKSPACE + "/gramine"
            build_str = " "

            load '../ci/config/config-docker.jenkinsfile'

            docker.build(
                "local:${env.BUILD_TAG}",
                "${build_str} -f ../ci/dockerfile/${base_os}.dockerfile ."
            ).inside("${env.DOCKER_ARGS_COMMON} ${env.DOCKER_ARGS_SGX}") {
                load '.ci/lib/config.jenkinsfile'
                load '.ci/lib/config-clang.jenkinsfile'
                load '.ci/lib/config-debug.jenkinsfile'
                load '.ci/lib/config-ubsan.jenkinsfile'
                load '.ci/lib/config-asan.jenkinsfile'

                load '../ci/lib/stage-build-sgx.jenkinsfile'
                load '../ci/lib/stage-test.jenkinsfile'
                load '../ci/lib/stage-test-sgx.jenkinsfile'
                load '../ci/lib/stage-test-examples.jenkinsfile'
                load '../ci/lib/stage-verification-examples.jenkinsfile'
            }
        }
    } finally {
        stage('cleanup'){
            sh 'rm -rf $ORIG_WKSP/*'
            sh "docker rmi local:${env.BUILD_TAG} -f"
        }
    }
}